from tortoise import BaseDBAsyncClient


async def upgrade(db: BaseDBAsyncClient) -> str:
    return """
        -- First, remove duplicate CustomFieldValue records, keeping the most recent one (highest ID)
        -- For company duplicates
        DELETE FROM customfieldvalue
        WHERE id IN (
            SELECT cfv1.id
            FROM customfieldvalue cfv1
            INNER JOIN customfieldvalue cfv2 ON cfv1.custom_field_id = cfv2.custom_field_id
                AND cfv1.company_id = cfv2.company_id
                AND cfv1.company_id IS NOT NULL
                AND cfv1.id < cfv2.id
        );
        
        -- For contact duplicates
        DELETE FROM customfieldvalue
        WHERE id IN (
            SELECT cfv1.id
            FROM customfieldvalue cfv1
            INNER JOIN customfieldvalue cfv2 ON cfv1.custom_field_id = cfv2.custom_field_id
                AND cfv1.contact_id = cfv2.contact_id
                AND cfv1.contact_id IS NOT NULL
                AND cfv1.id < cfv2.id
        );
        
        -- For deal duplicates
        DELETE FROM customfieldvalue
        WHERE id IN (
            SELECT cfv1.id
            FROM customfieldvalue cfv1
            INNER JOIN customfieldvalue cfv2 ON cfv1.custom_field_id = cfv2.custom_field_id
                AND cfv1.deal_id = cfv2.deal_id
                AND cfv1.deal_id IS NOT NULL
                AND cfv1.id < cfv2.id
        );
        
        -- For meeting duplicates
        DELETE FROM customfieldvalue
        WHERE id IN (
            SELECT cfv1.id
            FROM customfieldvalue cfv1
            INNER JOIN customfieldvalue cfv2 ON cfv1.custom_field_id = cfv2.custom_field_id
                AND cfv1.meeting_id = cfv2.meeting_id
                AND cfv1.meeting_id IS NOT NULL
                AND cfv1.id < cfv2.id
        );
        
        -- Now add unique constraints and indexes as generated by Tortoise
        CREATE UNIQUE INDEX IF NOT EXISTS "uid_customfield_custom__c313d2" ON "customfieldvalue" ("custom_field_id", "deal_id");
        CREATE UNIQUE INDEX IF NOT EXISTS "uid_customfield_custom__eddbbb" ON "customfieldvalue" ("custom_field_id", "company_id");
        CREATE UNIQUE INDEX IF NOT EXISTS "uid_customfield_custom__4e670b" ON "customfieldvalue" ("custom_field_id", "contact_id");
        CREATE UNIQUE INDEX IF NOT EXISTS "uid_customfield_custom__b2ecbe" ON "customfieldvalue" ("custom_field_id", "meeting_id");
        CREATE INDEX IF NOT EXISTS "idx_customfield_custom__c313d2" ON "customfieldvalue" ("custom_field_id", "deal_id");
        CREATE INDEX IF NOT EXISTS "idx_customfield_custom__eddbbb" ON "customfieldvalue" ("custom_field_id", "company_id");
        CREATE INDEX IF NOT EXISTS "idx_customfield_custom__4e670b" ON "customfieldvalue" ("custom_field_id", "contact_id");
        CREATE INDEX IF NOT EXISTS "idx_customfield_custom__b2ecbe" ON "customfieldvalue" ("custom_field_id", "meeting_id");"""


async def downgrade(db: BaseDBAsyncClient) -> str:
    return """
        DROP INDEX IF EXISTS "idx_customfield_custom__b2ecbe";
        DROP INDEX IF EXISTS "idx_customfield_custom__4e670b";
        DROP INDEX IF EXISTS "idx_customfield_custom__eddbbb";
        DROP INDEX IF EXISTS "idx_customfield_custom__c313d2";
        DROP INDEX IF EXISTS "uid_customfield_custom__b2ecbe";
        DROP INDEX IF EXISTS "uid_customfield_custom__4e670b";
        DROP INDEX IF EXISTS "uid_customfield_custom__eddbbb";
        DROP INDEX IF EXISTS "uid_customfield_custom__c313d2";"""
